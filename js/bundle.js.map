{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,mCAAmC,UAAU,MAAM,SAAS;AAC5D,+DAA+D,WAAW;AAC1E,wDAAwD,WAAW;AACnE;AACA;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,+CAA+C,IAAI,WAAW,WAAW,KAAK;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;;;;;;;;;;AC9FA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,QAAQ;AACR;AACA,mDAAmD;AACnD,+CAA+C;AAC/C;AACA;AACA;AACA,oBAAoB;AACpB;AACA,YAAY,OAAO;AACnB,qCAAqC;AACrC;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,uCAAuC;AACvC;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kDAAkD;AAClD,0EAA0E;AAC1E;AACA;AACA;AACA,uFAAuF;AACvF,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,8BAA8B;AAC9B;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,+DAA+D;AAC/D,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,+BAA+B;AAC/B,QAAQ,IAAI;AACZ;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH;AACpH;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,+BAA+B,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;AC5LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,gDAAgD;AAChD,SAAS;AACT;AACA;AACA,oEAAoE;AACpE,SAAS;AACT;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA,gDAAgD;AAChD;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,+DAA+D;AAC/D,gEAAgE;AAChE;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA,4BAA4B;AAC5B;AACA,wCAAwC;AACxC;AACA,2BAA2B,IAAI;AAC/B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCxEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,kEAAgB;AACzC,gBAAgB,mBAAO,CAAC,oEAAiB;AACzC,eAAe,mBAAO,CAAC,kEAAgB;AACvC,gBAAgB,mBAAO,CAAC,oEAAiB;AACzC,gBAAgB,mBAAO,CAAC,oEAAiB;AACzC,gBAAgB,mBAAO,CAAC,oEAAiB;AACzC,kBAAkB,mBAAO,CAAC,wEAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://apppratice2/../App Pratice \u0000#2/js/modules/calc.js","webpack://apppratice2/../App Pratice \u0000#2/js/modules/cards.js","webpack://apppratice2/../App Pratice \u0000#2/js/modules/forms.js","webpack://apppratice2/../App Pratice \u0000#2/js/modules/modal.js","webpack://apppratice2/../App Pratice \u0000#2/js/modules/sliders.js","webpack://apppratice2/../App Pratice \u0000#2/js/modules/tabs.js","webpack://apppratice2/../App Pratice \u0000#2/js/modules/timer.js","webpack://apppratice2/webpack/bootstrap","webpack://apppratice2/../App Pratice \u0000#2/js/script.js"],"sourcesContent":["function calc() {\r\n    // Calc\r\n\r\nconst counter = document.querySelector('.calculating__result span');\r\n\r\n\r\nlet sex, weight, height, age, ratio;\r\n\r\nif(localStorage.getItem('sex')) {\r\n    sex = localStorage.getItem('sex');\r\n} else {\r\n    sex = 'female';\r\n    localStorage.setItem('sex', 'female');\r\n}\r\n\r\nif(localStorage.getItem('ratio')) {\r\n    ratio = localStorage.getItem('ratio');\r\n} else {\r\n    ratio = 1.375;\r\n    localStorage.setItem('ratio', 1.375);\r\n}\r\n\r\nfunction initLocalSettings(selector, activeClass) {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    elements.forEach(elem => {\r\n        elem.classList.remove(activeClass);\r\n        if(elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n            elem.classList.add(activeClass);\r\n        }\r\n\r\n        if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n            elem.classList.add(activeClass);\r\n        }\r\n    });\r\n}\r\n\r\ninitLocalSettings('#gender div', 'calculating__choose-item_active'); \r\ninitLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active'); \r\n\r\nfunction calcTotal() {\r\n    if(!sex || !weight || !height || !age || !ratio) {\r\n        counter.textContent = 'Ошибка';\r\n        return;\r\n    }\r\n\r\n    if(sex === 'female') {\r\n       counter.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n    } else {\r\n        counter.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n    }\r\n\r\n}\r\n\r\ncalcTotal();\r\n\r\nfunction getStaticInformation (selector, activeClass) {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    elements.forEach(elem => {\r\n        elem.addEventListener('click', (e) => {\r\n            if(e.target.getAttribute('data-ratio')) {   //Если есть такой блок то мы понимаем что работает с блоком активности если нет то другой блок\r\n                ratio = +e.target.getAttribute('data-ratio');\r\n                localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n            } else {\r\n                sex = e.target.getAttribute('id');\r\n                localStorage.setItem('sex', e.target.getAttribute('id'));\r\n\r\n            }\r\n    \r\n            elements.forEach(elem => {\r\n                elem.classList.remove(activeClass);\r\n            });\r\n    \r\n            e.target.classList.add(activeClass);\r\n    \r\n            calcTotal();\r\n        });\r\n    });\r\n\r\n}\r\n\r\ngetStaticInformation ('#gender div', 'calculating__choose-item_active'); \r\ngetStaticInformation ('.calculating__choose_big div', 'calculating__choose-item_active'); \r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n            if(input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                    \r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;   \r\n            }\r\n            calcTotal();\r\n        });\r\n\r\n       \r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n// Классы ES6\r\n    // тут добавили элементы асинхронна после рефакторинга \r\n\r\n    \r\n        \r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n        }\r\n    \r\n        render() {\r\n            const element = document.createElement('div');\r\n\r\n            if(this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else{\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n                        <img src=${this.src} alt=${this.alt}>\r\n                        <h3 class=\"menu__item-subtitle\">Меню ${this.title}</h3>\r\n                        <div class=\"menu__item-descr\">${this.descr}</div>\r\n                        <div class=\"menu__item-divider\"></div>\r\n                        <div class=\"menu__item-price\">\r\n                            <div class=\"menu__item-cost\">Цена:</div>\r\n                            <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                        </div>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    \r\n    }\r\n\r\n    const getResources = async (url) => {     //Говорим функции что тут будет асинхронный код\r\n        const res = await fetch(url);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status ${res.status}`);  //Оператор ошибки выкидвается //Throw это генератр исключений он прерывает выполнение функции или передает управление на ближайший блок catch\r\n        }\r\n        return await res.json();\r\n\r\n    };\r\n\r\n    getResources('http://localhost:3000/menu')\r\n    .then(data => {\r\n        data.forEach(({img, altimg, title, descr, price}) => {\r\n            new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n        });\r\n    });\r\n    \r\n    // const div = new MenuCard(\r\n    //     \"img/tabs/vegy.jpg\",\r\n    //     '\"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     299,\r\n    //     '.menu .container',\r\n    //     'menu__item'\r\n    \r\n    // );\r\n    \r\n    // const premium = new MenuCard(\r\n    //     \"img/tabs/elite.jpg\",\r\n    //     '\"Премиум\"',\r\n    //     'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!',\r\n    //     550,\r\n    //     '.menu .container',\r\n    //     'menu__item'\r\n    \r\n    // );\r\n    \r\n    // const post = new MenuCard(\r\n    //     \"img/tabs/post.jpg\",\r\n    //     '\"Постное\"',\r\n    //     'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.',\r\n    //     430,\r\n    //     '.menu .container',\r\n    //     'menu__item'\r\n    \r\n    // );\r\n    \r\n    // div.render();\r\n    // premium.render();\r\n    // post.render();       //После рефакторинга\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n       // Forms\r\n    \r\n       const forms = document.querySelectorAll('form');    //Получаем все формы\r\n    \r\n       const message = {\r\n           loading: 'img/form/spinner.svg',\r\n           success: 'Все прошло успешно',\r\n           failure: 'Произошла ошибка!'\r\n       };\r\n       \r\n       forms.forEach(item => {     //Присваиваем обработчик для каждой формы\r\n           bindPostData(item);\r\n       });\r\n   \r\n       const postData = async (url, data) => {     //Говорим функции что тут будет асинхронный код\r\n           const res = await fetch(url, {      //Ставим await там где нам нужно дождаться выполнения операции\r\n               method: \"POST\",\r\n               headers: {\r\n                   'Content-type': 'application/json'\r\n                   },\r\n               body: data\r\n           });     //Так как это асинхронный код то респонс присовится к res только после получения данных и ниже мы получим ошибку\r\n           return await res.json();  //Возвращаем в формате json чтобы в дальнейшем уже работать с json форматом и на это требуется время поэтому ставим await\r\n   \r\n       };\r\n       \r\n       function bindPostData(form) {       //Функция постинга\r\n           form.addEventListener('submit', (e) => {\r\n               e.preventDefault();     //Отменяем стандартное поведение браузера когда он перезажружается после отправки формы\r\n       \r\n               const statusMessage = document.createElement('img');   //Создаем окно отображения состояния запроса\r\n               statusMessage.src = message.loading;\r\n               statusMessage.style.cssText = `\r\n                   display: block;\r\n                   margin: 0 auto;\r\n               `;   //Сразу после отправки запроса высвечивается загрузка\r\n               // form.append(statusMessage);     //Помещаем созданный блок с состоянием в самый конец формы\r\n               form.insertAdjacentElement('afterend', statusMessage);     //Усовершенствованный вариант чтобы спиннер показывался после блока и в каждой форме одинаково\r\n           \r\n               \r\n       \r\n               // request.setRequestHeader('Content-type', 'multipart/form-data');     //В комбинации XML и FormData заголовок не используется и ставиться автоматически\r\n               // request.setRequestHeader('Content-type', 'application/json');       //Для отправки в json формате\r\n               // formData - это один из форматов обмена данными с сервером как и json и такой формат сам формирует данные из форм\r\n               const formData = new FormData(form);\r\n       \r\n               // request.send(formData);\r\n       \r\n               // ****** Преобразование formdata к json формату\r\n       \r\n               // const object = {}\r\n               // formData.forEach((value, key) => {\r\n               //     object[key] = value;\r\n               // });  Убрали после рефакторинга и заменили json\r\n   \r\n               const json = JSON.stringify(Object.fromEntries(formData.entries()));  //Замена object  //Сначала создаем массив массивов, потом приводим обратно к объекту и передаем в json\r\n       \r\n               // ******\r\n       \r\n               // fetch('server.php', {\r\n               //     method: \"POST\",\r\n               //     headers: {\r\n               //         'Content-type': 'application/json'\r\n               //     },\r\n               //     body: JSON.stringify(object)\r\n               // })   //Произошел рефакторинг\r\n               \r\n               postData(' http://localhost:3000/requests', json)\r\n               // .then(data => data.text())      //Реф и убрали так как происходит на этапе postData\r\n               .then(data => {\r\n                   console.log(data);\r\n                   showThanksModal(message.success);\r\n                   statusMessage.remove();\r\n               }).catch(() => {\r\n                   showThanksModal(message.failure); \r\n               }).finally(() => {\r\n                   form.reset(); \r\n               });\r\n           });\r\n       }\r\n       \r\n       // *******\r\n       \r\n       function showThanksModal(message) {\r\n           const prevModalDialog = document.querySelector('.modal__dialog');\r\n           prevModalDialog.classList.add('hide');      //Скрываем модальное окно\r\n           // showModal();    //Делаем так что бы при исполнении функции модальное окно было открыто\r\n       \r\n           const thanksModal = document.createElement('div');     \r\n           thanksModal.classList.add('modal__dialog');     //Берем стили от удаленного модального окна\r\n           thanksModal.innerHTML = `\r\n               <div class=\"modal__content\"> \r\n                   <div data-close class=\"modal__close\">&times;</div>\r\n                   <div class=\"modal__title\">${message}</div>\r\n               </div>\r\n           `;\r\n           document.querySelector('.modal').append(thanksModal);\r\n       \r\n           setTimeout(() => {\r\n               thanksModal.remove();\r\n               prevModalDialog.classList.add('show');\r\n               prevModalDialog.classList.remove('hide');\r\n               closeModal();\r\n           }, 4000);\r\n       }\r\n       \r\n       showThanksModal(message.success);\r\n          \r\n}\r\n\r\nmodule.exports = forms;","// Модальное окно\r\n    \r\nfunction modal() {\r\n    const modalTrigger = document.querySelectorAll('[data-modal]'),\r\n    //   modalClose = document.querySelector('[data-close]');  //Рефактор\r\n      modal = document.querySelector('.modal');      \r\n    \r\n    for(let i = 0; i < modalTrigger.length; i++) {\r\n    modalTrigger[i].addEventListener('click', () => {\r\n        showModal();      \r\n    });\r\n    }\r\n    \r\n    function showModal() {\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden'; //Так запрещаем скролл при открытом модальном окне\r\n    }\r\n    \r\n    function closeModal() {\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = '';  \r\n    clearInterval(modalTimerId);       //Если пользователь уже открыл окно, то убираем вызов через время\r\n    }\r\n    \r\n    // modalClose.addEventListener('click', () => {\r\n    //     closeModal();       //Так говорим чтобы браузер сам определился какое значение ему нужно\r\n    // });  Рефактор\r\n    \r\n    \r\n    // Делаем закрытие по темной области вне окна\r\n    \r\n    modal.addEventListener('click', (event) => {\r\n    if(event.target == modal || event.target.getAttribute('data-close') == '') {       //После рефактора\r\n        closeModal(); \r\n    }\r\n    });\r\n    \r\n    \r\n    // Делаем чтобы окно закрывалось при нажатии кнопки esc\r\n    \r\n    document.addEventListener('keydown', (e) => {\r\n    if(e.code == 'Escape' && modal.classList.contains('show')) {\r\n    closeModal();\r\n    }\r\n    });\r\n    \r\n    // Добавляем вызов окна через какое-то время\r\n    \r\n    const modalTimerId = setTimeout(showModal, 50000);\r\n    \r\n    function showModalByScroll(){\r\n    if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {       // Если пролистанная часть страницы + видимая часть страницы >= всей страницы то...\r\n        showModal();\r\n        window.removeEventListener('scroll',showModalByScroll);     //Делаем так чтобы при долистывании до конца страницы, окно появлялось только один раз\r\n    }\r\n    }\r\n    \r\n    window.addEventListener('scroll',showModalByScroll);\r\n        \r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n    //Slider\r\n// Самостотельно написанный\r\n\r\n// const slides = document.querySelectorAll('.offer__slide');\r\n// const prev = document.querySelector('.offer__slider-prev');\r\n// const next = document.querySelector('.offer__slider-next');\r\n// const current = document.getElementById('current');\r\n\r\n// let i = 0;\r\n\r\n// function hideCard() {\r\n//     slides.forEach(item => {\r\n//         item.classList.add('hide');\r\n//     });\r\n//     current.innerHTML = `0${i+1}`;\r\n// }\r\n\r\n// function showCard(){\r\n//     slides[i].classList.remove('hide');\r\n//     slides[i].classList.add('show');\r\n// }\r\n\r\n// hideCard();\r\n// showCard();\r\n\r\n// prev.addEventListener('click', (e) => {\r\n//     if(i <= 0) {\r\n//         i = 3;\r\n//         hideCard();\r\n//         showCard();\r\n//     } else {\r\n//         hideCard();\r\n//         i--;\r\n//         showCard();\r\n//         current.innerHTML = `0${i+1}`;\r\n//     }\r\n// });\r\n\r\n// next.addEventListener('click', (e) => {\r\n//     if(i >= slides.length - 1) {\r\n//         i = 0;\r\n//         hideCard();\r\n//         showCard();\r\n//     } else {\r\n//         hideCard();\r\n//         i++;\r\n//         showCard();\r\n//         current.innerHTML = `0${i+1}`;\r\n//         }\r\n// });\r\n\r\n\r\n\r\n// Более сложный вариант слайдера\r\n\r\n\r\nconst slides = document.querySelectorAll('.offer__slide');\r\nconst slider = document.querySelector('.offer__slider');\r\nconst prev = document.querySelector('.offer__slider-prev');\r\nconst next = document.querySelector('.offer__slider-next');\r\nconst current = document.getElementById('current');\r\nconst slidesWrapper = document.querySelector('.offer__slider-wrapper');\r\nconst slidesInner = document.querySelector('.offer__slider-inner');\r\nconst width = window.getComputedStyle(slidesWrapper).width;     //Получаем примененные свойства из css\r\n\r\nlet slideIndex = 1;\r\nlet offset = 0;\r\n\r\ncurrent.innerHTML = `0${slideIndex}`;\r\n\r\nslidesInner.style.width = 100 * slides.length + '%';    //Резервируем место под все наши элементы карусели\r\nslidesInner.style.display = 'flex';\r\nslidesInner.style.transition = '0.5s all';\r\nslidesWrapper.style.overflow = 'hidden';\r\n\r\nslides.forEach(slide => {\r\n    slide.style.width = width;      //Каждый слайд будет равен окну демонстрации\r\n});\r\n\r\nslider.style.position = 'relative';\r\n\r\nconst indicators = document.createElement('ol');\r\nconst dots = [];\r\nindicators.classList.add('carousel-indicators');\r\n\r\nindicators.style.cssText = `\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 15;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-right: 15%;\r\n    margin-left: 15%;\r\n    list-style: none;\r\n`;\r\n\r\nslider.append(indicators);\r\n\r\nfor(let i = 0; i < slides.length; i++) {\r\n    const dot = document.createElement('li');\r\n    dot.setAttribute('data-slide-to', i + 1);\r\n\r\n    dot.style.cssText = `\r\n        box-sizing: content-box;\r\n        flex: 0 1 auto;\r\n        width: 30px;\r\n        height: 6px;\r\n        margin-right: 3px;\r\n        margin-left: 3px;\r\n        cursor: pointer;\r\n        background-color: #fff;\r\n        background-clip: padding-box;\r\n        border-top: 10px solid transparent;\r\n        border-bottom: 10px solid transparent;\r\n        opacity: .5;\r\n        transition: opacity .6s ease;\r\n    `;\r\n\r\n    if(i == 0) {\r\n        dot.style.opacity = 1;\r\n    }\r\n\r\n    indicators.append(dot);\r\n    dots.push(dot);\r\n}\r\n\r\nnext.addEventListener('click', () => {\r\nif(offset == +width.replace(/\\D/g, '') * (slides.length - 1)) {\r\n    offset = 0;\r\n} else {\r\n    offset += +width.replace(/\\D/g, '')\r\n}\r\n\r\n    slidesInner.style.transform = `translateX(-${offset}px)`;\r\n\r\n    if(slideIndex == slides.length) {\r\n        slideIndex = 1;\r\n    } else {\r\n        slideIndex++;\r\n    }\r\n\r\n    current.innerHTML = `0${slideIndex}`;\r\n\r\n    dots.forEach(item => item.style.opacity = '.5');\r\n    dots[slideIndex - 1].style.opacity = 1;\r\n});\r\n\r\nprev.addEventListener('click', () => {\r\n    if(offset == 0) {\r\n        offset = +width.replace(/\\D/g, '') * (slides.length - 1);\r\n    } else {\r\n        offset -= +width.replace(/\\D/g, '');\r\n    }\r\n    \r\n        slidesInner.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if(slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n    \r\n        current.innerHTML = `0${slideIndex}`;\r\n\r\n        dots.forEach(item => item.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\ndots.forEach(dot => {\r\n    dot.addEventListener('click', (e) => {\r\n        const slideTo = e.target.getAttribute('data-slide-to');\r\n        slideIndex = slideTo;\r\n        offset =+width.replace(/\\D/g, '') * (slideTo - 1);\r\n        slidesInner.style.transform = `translateX(-${offset}px)`;\r\n\r\n        current.innerHTML = `0${slideIndex}`;\r\n\r\n\r\n        dots.forEach(item => item.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n});\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    //Табы\r\n    \r\n    const tabs = document.querySelectorAll('.tabheader__item'),\r\n          tabsContent = document.querySelectorAll('.tabcontent'),\r\n          tabsParent = document.querySelector('.tabheader__items');     \r\n    \r\n    \r\n    \r\n    function hideTabContent() {         //Функция которая занимается тем, что скрывает все элементы которые в данный момент не активны\r\n        tabsContent.forEach(item => {\r\n            item.style.display = 'none';        //Здесь точно также можо использовать и classList   //Скрываем табы с описанием \r\n        }); \r\n    \r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');        //Удаляем выделение активности кнопки   //Не ставим точку потому что и так работаем с классами\r\n        });\r\n    }\r\n    \r\n    function showContent(i = 0) {\r\n        tabsContent[i].style.display = 'block';\r\n        tabs[i].classList.add('tabheader__item_active');        //Здесб доп классом можно добавить например еще и анимацию\r\n    }\r\n    \r\n    hideTabContent();\r\n    showContent();\r\n    \r\n    // ВСЕ ЭТО ДОЛГО НЕ РАБОТАЛО ТАК КАК ПРИ ПОЛУЧЕНИИ ЭЛЕМЕНТОВ ИСПОЛЬЗОВАЛ ALL И ПОЛУЧИЛ КОЛЛЕКЦИЮ\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n    \r\n            if(target && target.classList.contains('tabheader__item')) {        //Такой опрератор И чтобы мы при клики попали именно на элемент нужный а не в пустое место\r\n                tabs.forEach((item,i) => {\r\n                    if(target == item) {        //Если выбранный элемент идентичен какому-то элементу из подходящих,то ...\r\n                        hideTabContent();\r\n                        showContent(i); \r\n                    }\r\n                });\r\n            }\r\n        });\r\n}\r\n\r\nmodule.exports = tabs;","// ТАЙМЕР\r\n    \r\n    function timer() {\r\n        const deadline = '2022-08-20';\r\n    \r\n        function getTimeRemaining (endtime) {\r\n            let days, hours, minutes, seconds;\r\n            const t = Date.parse(endtime) - Date.parse(new Date());       //Получаем сколько осталось времени до конца отсчета  //Использовали parse потому что дата была в строчном формате, а нам ее нужно получить для математического расчета в миллисекундах\r\n            \r\n        \r\n            //УСЛОВИЕ ЕСЛИ ВДРУГ АКЦИЯ ЗАКОНЧИТЬСЯ, МЫ ДЕЛАЕМ ЧТОБЫ ЗНАЧЕНИЯ В ТАКОМ СЛУЧАЕ БЫЛИ ПРОСТО НОЛЬ\r\n        if(t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24));      // Math.floor круглет итоговые значения   //Получаем из миллисекунд количество оставшися дней\r\n            hours = Math.floor((t / (1000 * 60 * 60 ) % 24));   //Возвращаем остаток после деления на дни\r\n            minutes = Math.floor((t / (1000 * 60) % 60));\r\n            seconds = Math.floor((t / 1000) % 60);\r\n        }\r\n        \r\n            return {        //Вохвразаем объект\r\n                'total': t,\r\n                'days': days,\r\n                'hours': hours,\r\n                'minutes': minutes,\r\n                'seconds': seconds\r\n            };\r\n        \r\n        }\r\n        \r\n        console.log(getTimeRemaining (deadline));\r\n        \r\n        function setClock (selector, endtime) {     //Сначала получаем все элементы\r\n            const timer = document.querySelector(selector),\r\n                    days = timer.querySelector('#days'),\r\n                    hours = timer.querySelector('#hours'),\r\n                    minutes = timer.querySelector('#minutes'),\r\n                    seconds = timer.querySelector('#seconds'),\r\n                    timeInterval = setInterval(updateClock, 1000);      //Задаем интервал для выполнения функции\r\n        \r\n        updateClock ();     //Вызываем сразу чтобы не ждать секунду до обновления на странице\r\n        \r\n        function getZero(num) {         //Если меньше 10, то подставляем вперед ноль, чтобы выглядело симпатично\r\n            if(num >= 0 && num < 10) {\r\n                return `0${num}`;\r\n            } else {\r\n                return num;\r\n            }\r\n        }\r\n            \r\n        function updateClock () {           \r\n            const t = getTimeRemaining(endtime);        // Получаем объект из функции\r\n        \r\n            days.innerHTML = getZero(t.days);       \r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n        \r\n            if(t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n        }\r\n        \r\n        setClock ('.timer', deadline);\r\n        \r\n        \r\n    }\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\r\n\r\n// Собираем документ по модулям для разделения функционала и чтобы лучше ориентироваться в коде\r\n// Можно модули брать полностью и переиспользовать в других проектах\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    \r\n    const tabs = require('./modules/tabs'),\r\n        timer = require('./modules/timer'),\r\n        calc = require('./modules/calc'),\r\n        forms = require('./modules/forms'),\r\n        cards = require('./modules/cards'),\r\n        modal = require('./modules/modal'),\r\n        sliders = require('./modules/sliders');\r\n\r\n        tabs();\r\n        timer();\r\n        calc();\r\n        forms();\r\n        cards();\r\n        modal();\r\n        sliders();\r\n\r\n});"],"names":[],"sourceRoot":""}